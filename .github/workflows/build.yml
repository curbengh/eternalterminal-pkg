name: Build

on:
  schedule:
    - cron: "0 3 * * 0"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      build_exist: ${{ steps.build-exist.outputs.build_exist }}
      upstream_ver: ${{ steps.upstream-ver.outputs.upstream_ver }}
    steps:
      - name: Get repo tags
        run: |
          repo_tags=$(curl -sSL "https://api.github.com/repos/$GITHUB_REPOSITORY/releases" | jq '.[].tag_name')
          echo "repo_tags=$repo_tags" >> "$GITHUB_ENV"
      - name: Get upstream version
        id: upstream-ver
        run: |
          curl -SL 'https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=eternalterminal' -o "PKGBUILD"
          pkgver=$(grep -oP "^pkgver='?\K[\d\.]+" './PKGBUILD')
          pkgrel="$(grep -oP "^pkgrel=\K\d+" './PKGBUILD')"
          upstream_ver=${pkgver}-${pkgrel}
          echo "upstream_ver=$upstream_ver" >> "$GITHUB_ENV"
          echo "upstream_ver=$upstream_ver" >> "$GITHUB_OUTPUT"
      - name: Check if build exist
        id: build-exist
        run: |
          if echo "$repo_tags" | grep -q "$upstream_ver"; then
            echo "build_exist=true" >> "$GITHUB_OUTPUT"
          else
            echo "build_exist=false" >> "$GITHUB_OUTPUT"
          fi
  build_and_release:
    needs: test
    if: needs.test.outputs.build_exist == "false"
    runs-on: ubuntu-latest
    container: archlinux:base-devel
    timeout-minutes: 60
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Install git
        run: |
          pacman -Syu --noconfirm git
      - name: Clone repo
        run: |
          git clone 'https://aur.archlinux.org/eternalterminal.git'
      - name: Build
        working-directory: ./eternalterminal
        # Enable root to run makepkg
        run: |
          sed -i '/E_ROOT/d' /usr/bin/makepkg
          sed -i 's/ debug / !debug /g' /etc/makepkg.conf
          makepkg -s --noconfirm
      - name: Generate hashsums
        working-directory: ./eternalterminal
        run: |
          sha256sum *.zst > SHA256SUMS
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{needs.test.outputs.upstream_ver}}
          body: ${{needs.test.outputs.upstream_ver}}
          commit: main
          makeLatest: true
          artifacts: "./eternalterminal/*.zst,./eternalterminal/SHA256SUMS"
